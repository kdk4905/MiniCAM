[리팩토링 순서]
MiniCAM이 만들어진 순서
UI -> 시리얼 포트 연결 -> 이미지 분석
-> 기기랑 통신 -> 해칭 알고리즘 -> 버튼으로 기기 제어

시리얼 포트 연결을 리팩토링 한다


[객체지향 프로그래밍의 4가지 특징]

1. 추상화(Abstration)
공통성과 본질을 모아 추출
불필요한 세부 사항들은 제거하고 
가장 본질적이고 공통적인 부분만을 추출하여 표현

객체 지향 프로그래밍에서 의미하는 추상화
- 객체의 공통적인 속성과 기능을 추출하여 정의하는것

추상화 문법
추상클래스, 인터페이스
ex) 인터페이스
탈것 - Vehicle
public interface Vehicle 
{
	//시동을 건다
	public abstract void start()
	//전진
	void moveForward();
	//후진
	void moveBackward();
}

자동차, 오토바이 - 둘다 탈 것

2. 상속(Inheritance)
기존의 클래스를 재활용, 새로운 클래스를 작성
ex) 탈것
전진(), 후진() 있음
자동차
전진(), 후진(), 창문 열기()
자동차 - 상속, 탈것
창문 열기()만 만들면 된다

3. 다형성
객체 지향 프로그래밍의 꽃
여러 종류의 객체를 배열로 다룰 수 있게된다
하나의 타입으로 여러가지 타입의 객체를 참조 할 수 있다

인터페이스를 이용해서
클래스를 설계하면
최상위 클래스를 이용해서
하위 클래스들에 모두 접근, 참조가 가능함
ex) 탈것 - 인터페이스
자동차-탈것, 오토바이-탈것
운전자
drive(탈것 수단);
운전자는 자동차도 탈수있고 오토바이도 탈수있음

4. 캡슐화
